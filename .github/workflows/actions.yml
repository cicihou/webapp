name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.6
      uses: actions/setup-python@v3
      with:
        python-version: "3.6.15"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # pytest
        echo no pytest right now
    - name: upload webapp
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ github.workspace }}/
  release:
    name: release artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Downland artifacts
        uses: actions/download-artifact@v3
        with:
          name: webapp
  packer:
    runs-on: ubuntu-latest
    needs: release
    name: packer
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: test path
        run: pwd
      - name: test path1
        run: ls -r
      - name: test path2
        run: ls ../
      # validate templates
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: ./scripts/ami.pkr.hcl
      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: ./scripts/ami.pkr.hcl
          working_directory: ./
        env:
          PACKER_LOG: 1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
